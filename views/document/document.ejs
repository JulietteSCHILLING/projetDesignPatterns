<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/stylesheets/document.css">
    <title>
        <%= document[0].titre %>
    </title>
</head>

<body>
    <h1>
        <%= document[0].titre %>
    </h1>
    <p>Date de création : <%= document[0].dateCreation.toDateString() %>
    </p>
    <p>Date de dernière modification : <%= document[0].dateDernModif.toDateString() %>
    </p>

    <p>Liste des utilisateurs sur ce doc :</p>
    <ul id="userList"></ul>


    <table>
        <thead>
            <tr>
                <th></th>
                <% for (let col=1; col <=26; col++) { %>
                    <th>
                        <%= col %>
                    </th>
                    <% } %>
            </tr>
        </thead>
        <tbody>
            <% for (let row=1; row <=Math.ceil(document.length / 26); row++) { %>
                <tr>
                    <th>
                        <%= row %>
                    </th>
                    <% for (let col=1; col <=26; col++) { %>
                        <% let caseIndex=(row - 1) * 26 + col - 1; %>
                            <% if (caseIndex < document.length) { %>
                                <td class="editable-cell" onclick="editCell('<%= document[caseIndex].idCase %>')">
                                    <span id="text<%= document[caseIndex].idCase %>">
                                        <%= document[caseIndex].texte %>
                                    </span>
                                    <form id="form<%= document[caseIndex].idCase %>"
                                        onsubmit="updateText('<%= document[caseIndex].idCase %>'); return false;">
                                        <input type="text" id="input<%= document[caseIndex].idCase %>"
                                            value="<%= document[caseIndex].texte %>" />
                                    </form>
                                </td>

                                <% } else { %>
                                    <td></td>
                                    <% } %>
                                        <% } %>
                </tr>
                <% } %>
        </tbody>
    </table>


    <script>
        function editCell(caseId) {
            // Récupérer les éléments associés à la cellule
            const textElement = document.getElementById('text' + caseId);
            const formElement = document.getElementById('form' + caseId);
            const inputElement = document.getElementById('input' + caseId);

            // Cacher le texte et afficher le formulaire d'édition
            textElement.style.display = 'none';
            formElement.style.display = 'block';

            // Afficher et focus sur l'input
            inputElement.style.display = 'block';
            inputElement.focus();
        }

        function updateTextOnBlur(caseId) {
            const newText = document.getElementById('input' + caseId).value;
            updateText(caseId, newText);
        }

        function updateText(caseId, newText) {
            document.getElementById('text' + caseId).innerText = newText;
            document.getElementById('text' + caseId).style.display = 'block';
            document.getElementById('form' + caseId).style.display = 'none';

            // Envoyer la nouvelle valeur au serveur pour la mise à jour dans la base de données
            fetch('/document/updateCase', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    caseId: caseId,
                    newText: newText,
                }),
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Erreur lors de la mise à jour de la case');
                    }
                    return response;
                })
                .then(() => console.log('Case mise à jour avec succès'))
                .catch(error => console.error('Erreur lors de la mise à jour de la case :', error.message));
        }

        // Attacher l'événement blur à tous les champs de texte
        const inputFields = document.querySelectorAll('input[type="text"]');
        inputFields.forEach(input => {
            input.addEventListener('blur', function () {
                const caseId = this.id.substring(5); // Extraire l'ID de la case du champ de texte
                updateTextOnBlur(caseId);
            });
        });


        //Ici, on gère les websockets pour la mise à jour en temps réel des données
        const socket = new WebSocket('ws://localhost:6061'); // Connexion au serveur WebSocket

        // Attacher l'événement blur à tous les champs de texte
        const inputF = document.querySelectorAll('input[type="text"]');
        inputF.forEach(input => {
            input.addEventListener('blur', function () {
                const caseId = this.id.substring(5); // Extraire l'ID de la case du champ de texte
                const newText = this.value;

                // Envoyer un message WebSocket au serveur
                const message = JSON.stringify({ caseId, newText });
                socket.send(message);
            });
        });

        // Écouter les messages WebSocket du serveur
        socket.addEventListener('message', (event) => {
            //instanceof ne fonctionnait pas car on se retrouve avec des typeof 'string' ou 'object' au lieu de 'String' et 'Object'
            if(typeof event.data === 'string'){
                const data = JSON.parse(event.data);
                // Mettre à jour l'affichage avec la nouvelle liste d'utilisateurs
                const userListElement = document.getElementById('userList'); // Remplacez par votre élément d'affichage
                userListElement.innerHTML = ''; // Effacez l'affichage actuel

                data.users.forEach((user) => {
                    const userElement = document.createElement('li');
                    fetch('/users/getNomPrenomId/'+user, {
                        method: 'GET'
                    }).then(response => {
                            if (!response.ok) {
                                throw new Error('Erreur lors de la récupération du nom prénom');
                            }
                            return response.json();
                    })
                    .then(data => {
                        const username = data[0].nomCompte;
                        const userFirstname = data[0].prenomCompte;
                        userElement.textContent = userFirstname + " " + username;
                        userListElement.appendChild(userElement);
                    })
                    .catch(error => console.error('Erreur lors de la récupération du nom prénom :', error.message));
                    
                    
                });
            }else{
                const blobReader = new FileReader();

                blobReader.onload = function (event) {
                    const dataAsString = event.target.result;

                    // Maintenant, dataAsString est la représentation en texte des données du Blob

                    try {
                        const data = JSON.parse(dataAsString);
                        // Traitez data comme un objet JSON valide
                        const caseId = data.caseId;
                        const newText = data.newText;

                        // Mettre à jour le texte de la case avec la nouvelle valeur
                        document.getElementById('text' + caseId).innerText = newText;
                    } catch (error) {
                        console.error('Erreur lors de la conversion JSON :', error);
                    }
                };

                // Convertissez le Blob en texte
                blobReader.readAsText(event.data);
            }
        });
    </script>


</body>

</html>